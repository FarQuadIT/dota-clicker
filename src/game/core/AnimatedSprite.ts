/**
 * –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–ø—Ä–∞–π—Ç–æ–≤ –≤ –∏–≥—Ä–µ
 * 
 * –ü—Ä–∏–Ω—Ü–∏–ø—ã —Ä–∞–±–æ—Ç—ã:
 * 1. –£–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞–¥—Ä–∞–º–∏ –∞–Ω–∏–º–∞—Ü–∏–∏ –∏–∑ —Å–ø—Ä–∞–π—Ç—à–∏—Ç–∞
 * 2. –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏–∏ (idle, run, attack, death)
 * 3. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–∞–π–º–µ—Ä—ã –¥–ª—è —Å–º–µ–Ω—ã –∫–∞–¥—Ä–æ–≤
 * 4. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–æ–ª–±—ç–∫–∏ –Ω–∞ —Å–æ–±—ã—Ç–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
 * 
 * –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ –∏–∑ skeleton boy.txt - —Ä–∞–∑–¥–µ–ª –ø—Ä–æ SpineBoy –∫–ª–∞—Å—Å
 * –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: all_pixijs_content.txt —Ä–∞–∑–¥–µ–ª "Sprites"
 */

import { Container, Texture, Sprite } from 'pixi.js';

// ==================================================================================
// –¢–ò–ü–´ –î–ê–ù–ù–´–• –î–õ–Ø –ê–ù–ò–ú–ê–¶–ò–ô
// ==================================================================================

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–¥–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
 * –û–ø–∏—Å—ã–≤–∞–µ—Ç –∫–∞–∫ –¥–æ–ª–∂–Ω–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è
 */
interface AnimationConfig {
  /** –ò–º—è –∞–Ω–∏–º–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 'idle', 'run', 'attack') */
  name: string;
  
  /** –ú–∞—Å—Å–∏–≤ —Ç–µ–∫—Å—Ç—É—Ä –¥–ª—è –∫–∞–¥—Ä–æ–≤ –∞–Ω–∏–º–∞—Ü–∏–∏ */
  textures: Texture[];
  
  /** –°–∫–æ—Ä–æ—Å—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è (–∫–∞–¥—Ä–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É) */
  frameRate: number;
  
  /** –ó–∞—Ü–∏–∫–ª–∏–≤–∞—Ç—å –ª–∏ –∞–Ω–∏–º–∞—Ü–∏—é */
  loop: boolean;
  
  /** –ö–æ–ª–±—ç–∫ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∞–Ω–∏–º–∞—Ü–∏–∏ */
  onComplete?: () => void;
  
  /** –ö–æ–ª–±—ç–∫ –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏ */
  onStart?: () => void;
}

/**
 * –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏
 */
interface AnimationState {
  /** –¢–µ–∫—É—â–∏–π –∫–∞–¥—Ä –∞–Ω–∏–º–∞—Ü–∏–∏ */
  currentFrame: number;
  
  /** –í—Ä–µ–º—è —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–º–µ–Ω—ã –∫–∞–¥—Ä–∞ */
  frameTimer: number;
  
  /** –ê–∫—Ç–∏–≤–Ω–∞ –ª–∏ –∞–Ω–∏–º–∞—Ü–∏—è */
  isPlaying: boolean;
  
  /** –ó–∞–≤–µ—Ä—à–µ–Ω–∞ –ª–∏ –∞–Ω–∏–º–∞—Ü–∏—è */
  isComplete: boolean;
}

// ==================================================================================
// –ö–õ–ê–°–° –ê–ù–ò–ú–ò–†–û–í–ê–ù–ù–û–ì–û –°–ü–†–ê–ô–¢–ê
// ==================================================================================

/**
 * –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –∏–≥—Ä–µ
 * 
 * Extends Container –∏–∑ PixiJS - —ç—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç:
 * - –î–æ–±–∞–≤–ª—è—Ç—å –¥–æ—á–µ—Ä–Ω–∏–µ –æ–±—ä–µ–∫—Ç—ã (–ø–æ–ª–æ—Å–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è, —ç—Ñ—Ñ–µ–∫—Ç—ã)
 * - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–ø–æ–∑–∏—Ü–∏—è, –ø–æ–≤–æ—Ä–æ—Ç, –º–∞—Å—à—Ç–∞–±)
 * - –õ–µ–≥–∫–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å —Å–∏—Å—Ç–µ–º–æ–π —Ä–µ–Ω–¥–µ—Ä–∞ PixiJS
 */
export class AnimatedSprite extends Container {
  // –°–ø—Ä–∞–π—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∫–∞–¥—Ä–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
  protected sprite: Sprite;
  
  // –ö–æ–ª–ª–µ–∫—Ü–∏—è –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π
  protected animations: Map<string, AnimationConfig> = new Map();
  
  // –¢–µ–∫—É—â–∞—è –∞–∫—Ç–∏–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è
  protected currentAnimation: AnimationConfig | null = null;
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –∞–Ω–∏–º–∞—Ü–∏–∏
  protected animationState: AnimationState = {
    currentFrame: 0,
    frameTimer: 0,
    isPlaying: false,
    isComplete: false
  };

  /**
   * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—ã–π –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø—Ä–∞–π—Ç
   * 
   * @param initialTexture - –Ω–∞—á–∞–ª—å–Ω–∞—è —Ç–µ–∫—Å—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
   */
  constructor(initialTexture?: Texture) {
    super();
    
    // –°–æ–∑–¥–∞–µ–º —Å–ø—Ä–∞–π—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞–¥—Ä–æ–≤
    this.sprite = new Sprite(initialTexture || Texture.WHITE);
    
    // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —è–∫–æ—Ä—å —Å–ø—Ä–∞–π—Ç–∞ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    this.sprite.anchor.set(0.5, 0.5);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø—Ä–∞–π—Ç –∫–∞–∫ –¥–æ—á–µ—Ä–Ω–∏–π –æ–±—ä–µ–∫—Ç
    this.addChild(this.sprite);
    
    console.log('üé≠ –°–æ–∑–¥–∞–Ω AnimatedSprite');
  }

  /**
   * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é
   * 
   * @param config - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
   */
  public addAnimation(config: AnimationConfig): void {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
    if (!config.name || !config.textures || config.textures.length === 0) {
      console.error('‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏:', config);
      return;
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    this.animations.set(config.name, config);
    
    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∞–Ω–∏–º–∞—Ü–∏—è: ${config.name} (${config.textures.length} –∫–∞–¥—Ä–æ–≤)`);
  }

  /**
   * –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏
   * 
   * @param animationName - –∏–º—è –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
   * @param forceRestart - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å, –µ—Å–ª–∏ –∞–Ω–∏–º–∞—Ü–∏—è —É–∂–µ –∏–≥—Ä–∞–µ—Ç
   */
  public playAnimation(animationName: string, forceRestart: boolean = false): void {
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∞–Ω–∏–º–∞—Ü–∏–∏
    const animation = this.animations.get(animationName);
    
    if (!animation) {
      console.warn(`‚ö†Ô∏è –ê–Ω–∏–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: ${animationName}`);
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –º–µ–Ω—è—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é
    if (this.currentAnimation?.name === animationName && !forceRestart) {
      return; // –£–∂–µ –∏–≥—Ä–∞–µ—Ç
    }
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –∞–Ω–∏–º–∞—Ü–∏—é
    this.stopAnimation();
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é –∞–Ω–∏–º–∞—Ü–∏—é
    this.currentAnimation = animation;
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    this.animationState = {
      currentFrame: 0,
      frameTimer: 0,
      isPlaying: true,
      isComplete: false
    };
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –∫–∞–¥—Ä
    this.updateFrame();
    
    // –í—ã–∑—ã–≤–∞–µ–º –∫–æ–ª–±—ç–∫ –Ω–∞—á–∞–ª–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
    if (animation.onStart) {
      animation.onStart();
    }
    
    console.log(`üé¨ –ó–∞–ø—É—â–µ–Ω–∞ –∞–Ω–∏–º–∞—Ü–∏—è: ${animationName}`);
  }

  /**
   * –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–π –∞–Ω–∏–º–∞—Ü–∏–∏
   */
  public stopAnimation(): void {
    if (!this.currentAnimation) return;
    
    this.animationState.isPlaying = false;
    
    console.log(`‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∞–Ω–∏–º–∞—Ü–∏—è: ${this.currentAnimation.name}`);
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏ (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä –∏–∑ –∏–≥—Ä–æ–≤–æ–≥–æ —Ü–∏–∫–ª–∞)
   * 
   * @param deltaTime - –≤—Ä–µ–º—è, –ø—Ä–æ—à–µ–¥—à–µ–µ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–∞–¥—Ä–∞ (–≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö)
   */
  public updateAnimation(deltaTime: number): void {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è
    if (!this.currentAnimation || !this.animationState.isPlaying) {
      return;
    }
    
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –∫–∞–¥—Ä–∞
    this.animationState.frameTimer += deltaTime;
    
    // –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è –æ–¥–Ω–æ–≥–æ –∫–∞–¥—Ä–∞ (–≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö)
    const frameTime = 1000 / this.currentAnimation.frameRate;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ—Ä–∞ –ª–∏ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∫–∞–¥—Ä
    if (this.animationState.frameTimer >= frameTime) {
      this.nextFrame();
      this.animationState.frameTimer = 0;
    }
  }

  /**
   * –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∫–∞–¥—Ä—É –∞–Ω–∏–º–∞—Ü–∏–∏
   */
  private nextFrame(): void {
    if (!this.currentAnimation) return;
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∫–∞–¥—Ä—É
    this.animationState.currentFrame++;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å –ª–∏ –∞–Ω–∏–º–∞—Ü–∏—è
    if (this.animationState.currentFrame >= this.currentAnimation.textures.length) {
      if (this.currentAnimation.loop) {
        // –ó–∞—Ü–∏–∫–ª–∏–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
        this.animationState.currentFrame = 0;
      } else {
        // –ó–∞–≤–µ—Ä—à–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
        this.animationState.currentFrame = this.currentAnimation.textures.length - 1;
        this.animationState.isPlaying = false;
        this.animationState.isComplete = true;
        
        // –í—ã–∑—ã–≤–∞–µ–º –∫–æ–ª–±—ç–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        if (this.currentAnimation.onComplete) {
          this.currentAnimation.onComplete();
        }
      }
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–π –∫–∞–¥—Ä
    this.updateFrame();
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–≥–æ –∫–∞–¥—Ä–∞
   */
  private updateFrame(): void {
    if (!this.currentAnimation) return;
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç—É—Ä—É —Ç–µ–∫—É—â–µ–≥–æ –∫–∞–¥—Ä–∞
    const texture = this.currentAnimation.textures[this.animationState.currentFrame];
    
    if (texture) {
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é —Ç–µ–∫—Å—Ç—É—Ä—É
      this.sprite.texture = texture;
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞, –∏–≥—Ä–∞–µ—Ç –ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è
   * 
   * @param animationName - –∏–º—è –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @returns true –µ—Å–ª–∏ –∞–Ω–∏–º–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞
   */
  public isAnimationPlaying(animationName: string): boolean {
    return this.currentAnimation?.name === animationName && this.animationState.isPlaying;
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —Ç–µ–∫—É—â–µ–π –∞–Ω–∏–º–∞—Ü–∏–∏
   */
  public getCurrentAnimationName(): string | null {
    return this.currentAnimation?.name || null;
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Ç–µ–∫—É—â–µ–π –∞–Ω–∏–º–∞—Ü–∏–∏ (0-1)
   */
  public getAnimationProgress(): number {
    if (!this.currentAnimation) return 0;
    
    return this.animationState.currentFrame / this.currentAnimation.textures.length;
  }

  /**
   * –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞
   */
  public destroy(): void {
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    this.stopAnimation();
    
    // –û—á–∏—â–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é –∞–Ω–∏–º–∞—Ü–∏–π
    this.animations.clear();
    
    // –í—ã–∑—ã–≤–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –º–µ—Ç–æ–¥ destroy
    super.destroy();
    
    console.log('üóëÔ∏è AnimatedSprite —É–Ω–∏—á—Ç–æ–∂–µ–Ω');
  }
}