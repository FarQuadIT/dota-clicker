// src/contexts/GoldContext.tsx

import { createContext, useContext, useState, useEffect, type ReactNode } from 'react';
import { TEST_USER_ID, TEST_HERO_ID, API_BASE_URL } from '../shared/constants';

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å–≤–æ–π—Å—Ç–≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–æ–ª–æ—Ç–∞
 */
interface GoldContextProps {
  gold: number;                  // –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–æ–ª–æ—Ç–∞
  passiveIncome: number;         // –ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ (–∑–æ–ª–æ—Ç–∞ –≤ —Å–µ–∫—É–Ω–¥—É)
  setGold: (value: number | ((prev: number) => number)) => void;
  setPassiveIncome: (value: number | ((prev: number) => number)) => void;
  lastServerSyncTime: number;    // –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º
  setLastServerSyncTime: (value: number) => void;
  syncGoldWithServer: (forceUpdateIncome?: boolean) => Promise<void>; // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∑–æ–ª–æ—Ç–∞ —Å —Å–µ—Ä–≤–µ—Ä–æ–º
}

// –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å undefined –∫–∞–∫ –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
const GoldContext = createContext<GoldContextProps | undefined>(undefined);

/**
 * –ü—Ä–æ–≤–∞–π–¥–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–æ–ª–æ—Ç–∞
 */
export const GoldProvider = ({ children }: { children: ReactNode }) => {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–æ–ª–æ—Ç–∞
  const [gold, setGold] = useState(0);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞ –≤ —Å–µ–∫—É–Ω–¥—É
  const [passiveIncome, setPassiveIncome] = useState(0);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º
  const [lastServerSyncTime, setLastServerSyncTime] = useState(Date.now());

  // –§–ª–∞–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  const [isInitialized, setIsInitialized] = useState(false);

  // –§–ª–∞–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –±—ã–ª–∞ –ª–∏ –ø–µ—Ä–≤–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–æ—Ö–æ–¥–∞
  const [wasIncomeUpdated, setWasIncomeUpdated] = useState(false);

  /**
   * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∑–æ–ª–æ—Ç–∞ —Å —Å–µ—Ä–≤–µ—Ä–æ–º
   * @param forceUpdateIncome - –ï—Å–ª–∏ true, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—É—â–∏–π –¥–æ—Ö–æ–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
   */
  const syncGoldWithServer = async (forceUpdateIncome = false) => {
    try {
      // –ü—Ä–∏ –ø–µ—Ä–≤–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ –ø—Ä–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥
      const incomeToSend = (!wasIncomeUpdated || forceUpdateIncome) ? passiveIncome : 0;
      
      console.log(`üí∞ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–æ–ª–æ—Ç–∞ —Å —Å–µ—Ä–≤–µ—Ä–æ–º: –¥–æ—Ö–æ–¥=${incomeToSend}/—Å–µ–∫`);
      
      // 1. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–æ–ª–æ—Ç–∞
      const response = await fetch(`${API_BASE_URL}/update_user_money`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          userId: TEST_USER_ID,
          heroId: TEST_HERO_ID,
          income: incomeToSend // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥ –ø—Ä–∏ –ø–µ—Ä–≤–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        })
      });
      
      // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –¥–æ—Ö–æ–¥ –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω
      if (!wasIncomeUpdated && incomeToSend > 0) {
        setWasIncomeUpdated(true);
      }
      
      // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç
      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: ${response.status} ${response.statusText}`);
      }

      // 3. –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ—Ç–≤–µ—Ç–∞
      const data = await response.json();
      console.log('üìä –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', data);

      // 4. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≥–µ—Ä–æ—è
      const heroDataResponse = await fetch(`${API_BASE_URL}/hero_data?userId=${TEST_USER_ID}&heroId=${TEST_HERO_ID}`);
      
      if (!heroDataResponse.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≥–µ—Ä–æ—è: ${heroDataResponse.status} ${heroDataResponse.statusText}`);
      }
      
      // 5. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      const heroData = await heroDataResponse.json();
      console.log('üîÑ –ü–æ–ª—É—á–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≥–µ—Ä–æ—è:', heroData);
      
      // 6. –û–±–Ω–æ–≤–ª—è–µ–º –∑–æ–ª–æ—Ç–æ, –µ—Å–ª–∏ –æ–Ω–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
      if (heroData.coins !== undefined) {
        const serverGold = heroData.coins;
        const goldDifference = serverGold - gold;
        
        if (Math.abs(goldDifference) > 0.1) { // –ü–æ—Ä–æ–≥ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º
          if (goldDifference > 0) {
            console.log(`üí∞ –ü–æ–ª—É—á–µ–Ω–æ ${goldDifference.toFixed(2)} –∑–æ–ª–æ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞`);
          } else {
            console.log(`‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –≤ –∑–æ–ª–æ—Ç–µ: ${goldDifference.toFixed(2)}`);
          }
          
          // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∑–æ–ª–æ—Ç–∞
          console.log(`üí∞ –û–±–Ω–æ–≤–ª—è–µ–º –∑–æ–ª–æ—Ç–æ: ${gold.toFixed(2)} ‚Üí ${serverGold.toFixed(2)}`);
          setGold(serverGold);
        }
      }
      
      // 7. –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥, –µ—Å–ª–∏ –æ–Ω –∏–∑–º–µ–Ω–∏–ª—Å—è
      if (heroData.currentIncome !== undefined && Math.abs(heroData.currentIncome - passiveIncome) > 0.001) {
        console.log(`üìà –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ—Ö–æ–¥: ${passiveIncome.toFixed(2)} ‚Üí ${heroData.currentIncome.toFixed(2)}/—Å–µ–∫`);
        setPassiveIncome(heroData.currentIncome);
        
        // –ï—Å–ª–∏ –¥–æ—Ö–æ–¥ –∏–∑–º–µ–Ω–∏–ª—Å—è, –¥–µ–ª–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        if (wasIncomeUpdated && heroData.currentIncome !== passiveIncome) {
          setTimeout(() => syncGoldWithServer(true), 100);
        }
      }
      
      // 8. –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
      setLastServerSyncTime(Date.now());
      console.log('‚úÖ –ó–æ–ª–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∑–æ–ª–æ—Ç–∞ —Å —Å–µ—Ä–≤–µ—Ä–æ–º:', error);
    }
  };

  /**
   * –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∑–æ–ª–æ—Ç–∞ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É –∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º
   */
  useEffect(() => {
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞
    if (!isInitialized) return;

    console.log(`üìà –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –∑–æ–ª–æ—Ç–∞: +${passiveIncome} –≤ —Å–µ–∫—É–Ω–¥—É`);
    
    // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏, –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å —Å–µ—Ä–≤–µ—Ä–æ–º
    // –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞
    if (!wasIncomeUpdated && passiveIncome > 0) {
      syncGoldWithServer(true);
    }
    
    // –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
    const interval = setInterval(() => {
      // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–æ–ª–æ—Ç–æ –Ω–∞ –≤–µ–ª–∏—á–∏–Ω—É –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞
      setGold((prev) => prev + passiveIncome);
    }, 1000);

    // –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º (–∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥)
    const syncInterval = setInterval(() => {
      syncGoldWithServer();
    }, 15000);

    // –û—á–∏—â–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    return () => {
      clearInterval(interval);
      clearInterval(syncInterval);
    };
  }, [passiveIncome, isInitialized, wasIncomeUpdated]);

  /**
   * –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞
   */
  const initializeFromServer = (serverGold: number, serverIncome: number) => {
    console.log(`‚öôÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–æ–ª–æ—Ç–∞: ${serverGold} –∑–æ–ª–æ—Ç–∞, ${serverIncome}/—Å–µ–∫`);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    setGold(serverGold);
    setPassiveIncome(serverIncome);
    setLastServerSyncTime(Date.now());
    setIsInitialized(true);
    // –°–±—Ä–æ—Å —Ñ–ª–∞–≥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ—Ö–æ–¥–∞
    setWasIncomeUpdated(false);
  };

  // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–∑ App.tsx
  (window as any).initializeGoldContext = initializeFromServer;

  // –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç
  return (
    <GoldContext.Provider
      value={{ 
        gold, 
        passiveIncome, 
        setGold, 
        setPassiveIncome, 
        lastServerSyncTime, 
        setLastServerSyncTime,
        syncGoldWithServer
      }}
    >
      {children}
    </GoldContext.Provider>
  );
};

/**
 * –•—É–∫ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–æ–ª–æ—Ç–∞ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
 */
export const useGold = () => {
  const context = useContext(GoldContext);
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Ö—É–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
  if (!context) {
    throw new Error("useGold must be used within a GoldProvider");
  }
  
  return context;
};