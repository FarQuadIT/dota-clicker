// src/pages/ShopPage/ShopPage.tsx

import { useState, useEffect } from 'react';
import { shopCategories } from '../../shared/constants/shopConfig';
import type { ShopItem, HeroStats } from '../../shared/types';
import { useGold } from '../../contexts/GoldContext';
import { useHeroStore } from '../../contexts/heroStore';
import ShopItemCard from '../../features/shop/ShopItemCard/ShopItemCard';
import './ShopPage.css';
import { SHOP_CATEGORIES, TEST_USER_ID, TEST_HERO_ID } from '../../shared/constants';
import { fetchHeroItems , updateItemLevel } from '../../shared/api/apiService';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –º–∞–≥–∞–∑–∏–Ω–∞
 * 
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Ç–µ–∫—É—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–∫—É–ø–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã –∑–∞ –∑–æ–ª–æ—Ç–æ –∏ —É–ª—É—á—à–∞—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –≥–µ—Ä–æ—è
 */
export default function ShopPage() {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const [activeCategory, setActiveCategory] = useState<string>(SHOP_CATEGORIES.MAX_HEALTH);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –º–∞–≥–∞–∑–∏–Ω–∞
  const [items, setItems] = useState<Record<string, ShopItem[]>>({});
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  const [isInitialLoading, setIsInitialLoading] = useState<boolean>(true);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–∫—É–ø–∫–∏ (–¥–ª—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤)
  const [purchasingItemIds, setPurchasingItemIds] = useState<Set<string>>(new Set());
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—à–∏–±–∫–∏
  const [error, setError] = useState<string | null>(null);
  
  // –ü–æ–ª—É—á–∞–µ–º –∑–æ–ª–æ—Ç–æ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  const { gold, setGold, setPassiveIncome, syncGoldWithServer } = useGold();
  
  // –ü–æ–ª—É—á–∞–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –≥–µ—Ä–æ—è –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
  const stats = useHeroStore((state) => state.stats);
  const updateStat = useHeroStore((state) => state.updateStat);
  
  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    const loadItems = async () => {
      if (Object.keys(items).length > 0) return; // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É
      
      setIsInitialLoading(true);
      setError(null);
      
      try {
        console.log('üîç –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –º–∞–≥–∞–∑–∏–Ω–∞...');
        const fetchedItems = await fetchHeroItems(TEST_USER_ID, TEST_HERO_ID);
        
        if (fetchedItems) {
          console.log('‚úÖ –ü—Ä–µ–¥–º–µ—Ç—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', fetchedItems);
          setItems(fetchedItems);
        } else {
          throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã');
        }
      } catch (error) {
        const errorMessage = error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤';
        console.error('‚ùå', errorMessage);
        setError(errorMessage);
      } finally {
        setIsInitialLoading(false);
      }
    };
    
    loadItems();
  }, []);
  
 /**
 * –§—É–Ω–∫—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ - –æ–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–µ–¥–º–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
 */
/**
 * –§—É–Ω–∫—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ - –æ–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–µ–¥–º–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
 */
const buyItem = async (category: string, itemIndex: number) => {
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–µ–¥–º–µ—Ç
  const item = items[category][itemIndex];
  
  // –ï—Å–ª–∏ –ø—Ä–µ–¥–º–µ—Ç —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø–æ–∫—É–ø–∫–∏, –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ
  if (purchasingItemIds.has(item.id)) return;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏ –∑–æ–ª–æ—Ç–∞
  if (gold < item.currentPrice) {
    console.log(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞ –¥–ª—è ${item.title}. –ù—É–∂–Ω–æ: ${item.currentPrice}, –¥–æ—Å—Ç—É–ø–Ω–æ: ${gold}`);
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –ª–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –≥–µ—Ä–æ—è
  if (!stats) {
    console.log('–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –≥–µ—Ä–æ—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    return;
  }
  
  // –û—Ç–º–µ—á–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç –∫–∞–∫ –ø–æ–∫—É–ø–∞–µ–º—ã–π (–¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏)
  setPurchasingItemIds(prev => new Set(prev).add(item.id));
  
  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä (—Ç–æ, —Å–∫–æ–ª—å–∫–æ –∑–∞–ø–ª–∞—Ç–∏–ª–∏)
    const cost = item.currentPrice;
    
    // –£–º–µ–Ω—å—à–∞–µ–º –∑–æ–ª–æ—Ç–æ –Ω–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç–∞
    setGold(prev => prev - cost);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É –≥–µ—Ä–æ—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞
    const newStatValue = Number(stats[category]) + item.baseValue;
    updateStat(category as keyof HeroStats, newStatValue);
    
    // –ï—Å–ª–∏ —ç—Ç–æ –ø—Ä–µ–¥–º–µ—Ç, —É–≤–µ–ª–∏—á–∏–≤–∞—é—â–∏–π –¥–æ—Ö–æ–¥, –æ–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥
    if (category === SHOP_CATEGORIES.INCOME) {
      setPassiveIncome(newStatValue);
    }
    
    // –°–æ–∑–¥–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç —Å –Ω–æ–≤—ã–º —É—Ä–æ–≤–Ω–µ–º –∏ —Ü–µ–Ω–æ–π
    const updatedItem = {
      ...item,
      level: item.level + 1,
      currentPrice: item.priceFormula(item.currentPrice),
    };
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —ç—Ç–æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –≤ –º–∞—Å—Å–∏–≤–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    setItems(prev => {
      const newItems = { ...prev };
      newItems[category] = [...newItems[category]]; // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤
      newItems[category][itemIndex] = updatedItem;  // –ó–∞–º–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç
      return newItems;
    });
    
    console.log(`–ö—É–ø–ª–µ–Ω –ø—Ä–µ–¥–º–µ—Ç ${item.title} –∑–∞ ${cost} –∑–æ–ª–æ—Ç–∞`);
    console.log(`–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ ${category} —É–≤–µ–ª–∏—á–µ–Ω–∞ –¥–æ ${newStatValue}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –≥–µ—Ä–æ—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    const currentStats = useHeroStore.getState().stats!;
    
    // –°–æ–∑–¥–∞–µ–º payload –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä, —Å–æ–±–ª—é–¥–∞—è —Ñ–æ—Ä–º–∞—Ç —Å–µ—Ä–≤–µ—Ä–∞
    const payload = {
      userId: TEST_USER_ID,
      heroId: TEST_HERO_ID,
      itemId: item.id,
      currentLevel: updatedItem.level,
      currentValue: newStatValue, // –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ (–ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏)
      cost: cost, // –°—Ç–æ–∏–º–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä—É—é –∑–∞–ø–ª–∞—Ç–∏–ª–∏
      currentPrice: updatedItem.currentPrice, // –ù–æ–≤–∞—è —Ü–µ–Ω–∞ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–∫—É–ø–∫–∏
      maxHealth: currentStats["max-health"],
      healthRegen: currentStats["health-regen"],
      maxEnergy: currentStats["max-mana"],
      energyRegen: currentStats["mana-regen"],
      damage: currentStats["damage"],
      movementSpeed: currentStats["movement-speed"],
      vampirism: currentStats["vampirism"],
      currentIncome: currentStats["income"]
    };
    
    console.log("üü° === CLIENT DEBUG ===");
    console.log("Gold (–¥–æ):", gold);
    console.log("Item ID:", item.id);
    console.log("Cost:", cost);
    console.log("Level:", updatedItem.level);
    console.log("Price (—Å–ª–µ–¥—É—é—â–∏–π):", updatedItem.currentPrice);
    console.log("Current stats:", currentStats);
    console.log("Payload, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä:", payload);
    console.log("üü° ====================\n");
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    await updateItemLevel(payload);
    
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∑–æ–ª–æ—Ç–æ —Å —Å–µ—Ä–≤–µ—Ä–æ–º
    await syncGoldWithServer(category === SHOP_CATEGORIES.INCOME);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ø—Ä–µ–¥–º–µ—Ç–∞:', error);
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–æ–ª–æ—Ç–æ, –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
    setGold(prev => prev + item.currentPrice);
  } finally {
    // –°–Ω–∏–º–∞–µ–º —Ñ–ª–∞–≥ "–≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø–æ–∫—É–ø–∫–∏"
    setPurchasingItemIds(prev => {
      const newSet = new Set(prev);
      newSet.delete(item.id);
      return newSet;
    });
  }
};

  // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–∏–ª–∏ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤)
  const categoryItems = items[activeCategory] || [];

  return (
    <div className="shop-page">
      {/* –í–µ—Ä—Ö–Ω—è—è —á–∞—Å—Ç—å —Å —Ñ–æ–Ω–æ–º –±–∞—à–Ω–∏ */}
      <div className="shop-top">
        <div className="characteristics">
          <span>
            {shopCategories[activeCategory]?.name}: {stats 
              ? Number(stats[activeCategory]).toFixed(2) 
              : '0.00'}
          </span>
        </div>
      </div>

      {/* –ú–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π */}
      <div className="menu-container">
        <div className="menu-grid">
          {Object.entries(shopCategories).map(([key, category]) => (
            <div
              key={key}
              className={`menu-item ${activeCategory === key ? "active" : ""}`}
              onClick={() => setActiveCategory(key)}
              title={category.name}
              style={{
                background: `linear-gradient(to bottom, ${category.color}99, rgba(0,0,0,0.1))`,
                borderColor: category.color,
                color: category.color,
              }}
            >
              <img
                className="menu-icon"
                src={category.icon}
                alt={category.name}
                style={{ filter: category.filter }}
              />
            </div>
          ))}
        </div>
      </div>

      {/* –ù–∏–∂–Ω—è—è —á–∞—Å—Ç—å —Å–æ —Å–ø–∏—Å–∫–æ–º –ø—Ä–µ–¥–º–µ—Ç–æ–≤ */}
      <div className="shop-bottom">
        <div className="items-scroll-area">
          {isInitialLoading ? (
            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–∫–µ–ª–µ—Ç–æ–Ω-–∑–∞–≥—Ä—É–∑–∫—É, –µ—Å–ª–∏ –∏–¥–µ—Ç –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
            Array(3).fill(0).map((_, index) => (
              <div key={`skeleton-${index}`} className="item-placeholder">
                <div className="item-icon-wrapper">
                  <div className="item-icon-placeholder"></div>
                  <div className="item-level">–£—Ä. 1</div>
                </div>
                <div className="item-details-placeholder">
                  <div className="item-title-placeholder"></div>
                  <div className="item-stats-placeholder">
                    <div className="stat-value"></div>
                    <div className="stat-arrow">‚Üí</div>
                    <div className="stat-next"></div>
                  </div>
                </div>
                <div className="item-button-placeholder">
                  <div className="button-price"></div>
                  <div className="button-icon"></div>
                </div>
              </div>
            ))
          ) : error ? (
            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ, –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å
            <div style={{ 
              padding: '20px', 
              textAlign: 'center', 
              color: '#ff6b6b' 
            }}>
              <p>{error}</p>
              <button 
                onClick={() => window.location.reload()} 
                style={{
                  padding: '8px 16px',
                  background: '#1a1a1a',
                  color: 'white',
                  border: '1px solid #444',
                  borderRadius: '4px',
                  marginTop: '10px',
                  cursor: 'pointer'
                }}
              >
                –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
              </button>
            </div>
          ) : categoryItems.length > 0 ? (
            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
            categoryItems.map((item, index) => (
              <ShopItemCard
                key={item.id}
                item={item}
                category={shopCategories[activeCategory]}
                isAffordable={gold >= item.currentPrice} // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏ –∑–æ–ª–æ—Ç–∞
                currentValue={stats ? Number(stats[activeCategory]) : 0} // –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
                onBuy={() => buyItem(activeCategory, index)} // –ü–µ—Ä–µ–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∫—É–ø–∫–∏
                isPurchasing={purchasingItemIds.has(item.id)} // –§–ª–∞–≥ –ø–æ–∫—É–ø–∫–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
              />
            ))
          ) : (
            // –ó–∞–≥–ª—É—à–∫–∞, –µ—Å–ª–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç
            <div style={{ 
              padding: '20px', 
              textAlign: 'center', 
              color: 'white' 
            }}>
              <p>–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤</p>
            </div>
          )}
        </div>
      </div>
    </div>
  );
}